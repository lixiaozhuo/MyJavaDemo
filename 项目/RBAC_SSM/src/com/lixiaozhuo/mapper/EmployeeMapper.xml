<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixiaozhuo.mapper.EmployeeMapper">
	<resultMap type="Employee" id="employeeResultMap2">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="age" property="age" />
		<result column="admin" property="admin" />
		<association property="dept" column="dept_id"
			select="com.lixiaozhuo.mapper.DepartmentMapper.get" javaType="Department">
		</association>
		<collection property="roles" ofType="Role" column="id"
			select="com.lixiaozhuo.mapper.RoleMapper.getByEmployee">
		</collection>
	</resultMap>

	<resultMap type="Employee" id="employeeResultMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="age" property="age" />
		<result column="admin" property="admin" />
		<association property="dept" javaType="Department">
			<id column="deptId" property="id" />
			<result column="deptName" property="name" />
			<result column="deptSn" property="sn" />
		</association>
		<collection property="roles" ofType="Role">
			<id column="roleId" property="id" />
			<result column="roleName" property="name" />
			<result column="roleSn" property="sn" />
		</collection>
	</resultMap>


	<insert id="insertRelation">
		INSERT
		INTO employee_roles(role_id,employee_id)
		VALUE(#{roleId},#{empId})
	</insert>

	<delete id="deleteRelation">
		DELETE
		FROM employee_roles
		<where>
			<if test="roleId!=null">
				AND role_id = #{roleId}
			</if>
			<if test="empId!=null">
				AND employee_id = #{empId}
			</if>
		</where>
	</delete>

	<insert id="save" parameterType="Employee" useGeneratedKeys="true"
		keyColumn="id" keyProperty="id">
		INSERT INTO
		t_employee(name,password,email,age,admin,dept_id)
		VALUE(#{name},#{password},#{email},#{age},#{admin},#{dept.id})
	</insert>

	<update id="update">
		UPDATE t_employee
		<set>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="password != null">
				password=#{password},
			</if>
			<if test="email != null">
				email=#{email},
			</if>
			<if test="age != null">
				age=#{age},
			</if>
			<if test="admin != null">
				admin=#{admin},
			</if>
			<if test="admin == null">
				admin=0,
			</if>
			<if test="dept.id != null">
				dept_id=#{dept.id},
			</if>
		</set>
		WHERE id=#{id}
	</update>

	<delete id="delete">
		DELETE
		FROM t_employee
		WHERE
		id=#{id}
	</delete>

	<sql id="selectField">
		SELECT e.id id,e.name
		name,e.password password,e.email,
		email,e.age age,e.admin admin,d.id deptId,d.name deptName,d.sn deptSn,
		r.id roleId,r.name roleName,r.sn roleSn
	</sql>

	<sql id="selectTable">
		FROM
		t_employee e LEFT
		JOIN t_department d ON
		e.dept_id=d.id
		LEFT JOIN employee_roles er ON e.id =
		er.employee_id
		LEFT JOIN
		t_role r
		ON r.id = er.role_id
	</sql>

	<sql id="sqlCondition">
		<where>
			<if test="keyword!=null">
				AND e.name LIKE CONCAT('%',#{keyword},'%')
			</if>
		</where>
	</sql>

	<select id="get" resultMap="employeeResultMap">
		<include refid="selectField" />
		<include refid="selectTable" />
		WHERE e.id=#{id}
	</select>

	<select id="getUserByNameAndPassword" resultMap="employeeResultMap">
		<include refid="selectField" />
		<include refid="selectTable" />
		WHERE e.name=#{name} AND e.password = #{password}
	</select>

	<select id="list" resultMap="employeeResultMap">
		<include refid="selectField" />
		<include refid="selectTable" />
	</select>

	<select id="queryCount" resultType="Long">
		SELECT COUNT(*)
		FROM t_employee
		<include refid="sqlCondition" />
	</select>

	<select id="query" resultMap="employeeResultMap">
		<include refid="selectField" />
		<include refid="selectTable" />
		WHERE e.id IN (SELECT s.id FROM (SELECT * FROM t_employee	
		LIMIT #{startPage},#{pageSize}) AS s)
		<if test="keyword!=null">
			AND e.name LIKE CONCAT('%',#{keyword},'%')
		</if>
	</select>
</mapper>